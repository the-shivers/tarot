/* deck.css */
html, body {
    background: none;
  }
  
  #viewport {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
  }
  
  #deck {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .card {
    position: absolute;
    width: var(--card-width, 175px);
    height: var(--card-height, 300px);
    transform-origin: center center;
    backface-visibility: hidden;
    cursor: pointer;
    filter: drop-shadow(0 2px 3px rgba(0, 0, 0, 0.2));
    transition: transform 0.8s cubic-bezier(0.2, 0, 0.2, 1), filter 0.3s ease-out;
    will-change: transform, filter;
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
  }
  
  .card-content {
    transition: transform 0.3s cubic-bezier(0.2, 0, 0.2, 1);
    will-change: transform;
  }
  
  .card.hovered {
    filter: drop-shadow(0 8px 12px rgba(0, 0, 0, 0.25));
    z-index: 100;
  }
  
  .card.hovered .card-content {
    transform: translateY(calc(-1 * var(--hover-lift)));
  }
  
  /* Toggle Button Styles */
  #toggle-view {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 8px 16px;
    font-family: 'Cinzel', serif;
    font-size: calc(1.2rem + 0.5vw);
    background: transparent;
    color: #fff;
    border: 1px solid #fff;
    cursor: pointer;
    z-index: 1000;
    transition: background 0.3s, color 0.3s;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
    outline: none;
  }
  
  /* Card hover effects - these should NOT be inside a media query */
  .card.hovered {
    filter: drop-shadow(0 8px 12px rgba(0, 0, 0, 0.25));
    z-index: 100;
  }
  
  .card.hovered .card-content {
    transform: translateY(calc(-1 * var(--hover-lift)));
  }
  
  /* Button hover effects only for desktop */
  @media (hover: hover) {
    #toggle-view:hover {
        background: #fff;
        color: #0d000f;
    }
  }
  
  /* For mobile, ONLY show white during the actual press */
  #toggle-view:active {
    background: #fff;
    color: #0d000f;
  }
  
  /* Explicitly reset on focus */
  #toggle-view:focus {
    background: transparent;
    color: #fff;
  }
  
  /* Floating animation for background deck */
  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-20px); }
  }
  
  /* Mystical particles */
  .particle-container {
    position: absolute;
    top: 50%;
    left: 50%;
    width: var(--card-width);
    height: var(--card-height);
    pointer-events: none;
    transform: translate(-50%, -50%);
    /* For debugging */
    /* border: 1px solid red; */
  }
  
  .mystic-particle {
    position: absolute;
    width: 10px;
    height: 10px;
    left: 50%;
    top: 50%;
    background: radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 70%);
    border-radius: 50%;
    pointer-events: none;
    opacity: 0;
    animation: particle var(--duration) ease-in-out infinite;
    animation-delay: var(--delay);
    filter: blur(1px);
    transform: translate(-50%, -50%);
    z-index: 10;
  }
  
  @keyframes particle {
    0% {
        opacity: 0;
        transform: translate(
            calc(-50% + var(--x-offset)),
            calc(-50% + var(--card-height) * 0.2)
        );
    }
    20% {
        opacity: 1;
    }
    60% {
        opacity: 0.6;
    }
    80% {
        opacity: 0.2;
    }
    100% {
        opacity: 0;
        transform: translate(
            calc(-50% + var(--x-offset)),
            calc(-50% - var(--card-height) * 1.8)
        );
    }
  }
  
  /* Background deck specific styles */
  #background-deck #deck {
    filter: none;
    animation: float 3s ease-in-out infinite;
  }
  
  #background-deck {
    opacity: 1;
  }
  
  #background-deck .card {
    transition: transform 1.5s cubic-bezier(0.2, 0, 0.2, 1);
    filter: none;
    opacity: 1;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    #background-deck #deck {
        transform: scale(0.8);
    }
    
    @keyframes float {
        0%, 100% { transform: translateY(0) scale(0.8); }
        50% { transform: translateY(-10px) scale(0.8); }
    }
  }
  